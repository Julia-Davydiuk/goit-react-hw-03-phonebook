{"version":3,"sources":["components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactItem/ContactItem.js","components/ContactList/ContactList.js","App.js","index.js","components/ContactForm/ContactForm.module.css","components/Filter/Filter.module.css","components/ContactItem/ContactItem.module.css"],"names":["ContactForm","state","name","number","handleChange","e","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","className","style","form","this","label","input","type","onChange","pattern","title","required","button","Component","Filter","ContactItem","id","onClick","item","btn","ContactList","contactList","map","App","contacts","filter","addContact","contact","uuidv4","find","alert","changeFilter","filterContacts","normalizedFilter","toLowerCase","includes","deleteContact","contactId","prevState","localStorage","getItem","parsedContacts","JSON","parse","prevProps","nextContacts","setItem","stringify","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.5a3644c8.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport style from './ContactForm.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass ContactForm extends Component {\r\n    state = {\r\n        name: '',\r\n        number: '',\r\n    };\r\n\r\n    handleChange = e => {\r\n        const { name, value } = e.currentTarget;\r\n        this.setState({ [name]: value, });\r\n    };\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        this.props.onSubmit(this.state);\r\n        this.setState({ name: '', number: ''})\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <form className={style.form}\r\n                onSubmit={this.handleSubmit}>\r\n                <label className={style.label}>\r\n                    Name <input\r\n                      className={style.input}\r\n                      type=\"text\"\r\n                      name=\"name\"\r\n                      value={this.state.name}\r\n                      onChange={this.handleChange}\r\n                      pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                      title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                      required\r\n                    />\r\n                </label>\r\n\r\n                <label className={style.label}>\r\n                    Number <input\r\n                      className={style.input}\r\n                      type=\"tel\"\r\n                      name=\"number\"\r\n                      value={this.state.number}\r\n                      onChange={this.handleChange}\r\n                      pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                      title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n                      required\r\n                      />\r\n                </label>\r\n\r\n                <button className={style.button} type=\"submit\">Add contact</button>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nContactForm.propTypes = {\r\n    onSubmit: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactForm;","import React from 'react';\r\nimport style from './Filter.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Filter = ({ value, onChange }) => (\r\n    <label className={style.label}>\r\n        Find contacts by name\r\n        <input className={style.input} type=\"text\" value={value} onChange={onChange} />\r\n    </label>\r\n);\r\n\r\nFilter.propTypes = {\r\n    value: PropTypes.string.isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;","import React from 'react';\r\nimport style from './ContactItem.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ContactItem = ({ id, name, number, onClick }) => (\r\n    <li className={style.item}>{name}: {number}\r\n        <button type=\"button\"\r\n            className={style.btn}\r\n            onClick={() => { onClick(id) }}>\r\n            Delete</button>\r\n    </li>\r\n);\r\n\r\nContactItem.propTypes = {\r\n    id: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    number: PropTypes.string.isRequired,\r\n    onClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactItem;","import React from 'react';\r\nimport ContactItem from '../ContactItem';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ContactList = ({ contactList, onClick }) => (\r\n    <ul>\r\n        {contactList.map(item => (\r\n                <ContactItem \r\n                    key={item.id}\r\n                    id={item.id}\r\n                    name={item.name}\r\n                    number={item.number}\r\n                    onClick={onClick}\r\n                />\r\n        ))}\r\n    </ul>\r\n);\r\n\r\nContactList.propTypes = {\r\n  contactList: PropTypes.array.isRequired,\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactList;","import React, { Component } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport './App.css';\r\nimport ContactForm from './components/ContactForm';\r\nimport Filter from './components/Filter';\r\nimport ContactList from './components/ContactList';\r\n \r\nclass App extends Component {\r\n    state = {\r\n    contacts: [\r\n     {id: 'id-1', name: 'Rosie Simpson', number: '459-12-56'},\r\n    {id: 'id-2', name: 'Hermione Kline', number: '443-89-12'},\r\n    {id: 'id-3', name: 'Eden Clements', number: '645-17-79'},\r\n    {id: 'id-4', name: 'Annie Copeland', number: '227-91-26'},\r\n        ],\r\n        filter: '',\r\n  };\r\n  \r\n  componentDidMount() {\r\n    const contacts = localStorage.getItem('contacts');\r\n    const parsedContacts = JSON.parse(contacts);\r\n\r\n    if (parsedContacts) {\r\n      this.setState({ contacts: parsedContacts });\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    const nextContacts = this.state.contacts;\r\n    const prevContacts = prevState.contacts;\r\n\r\n    if (nextContacts !== prevContacts) {\r\n      localStorage.setItem('contacts', JSON.stringify(nextContacts));\r\n    }\r\n  }\r\n\r\n    addContact = ({name, number}) => {\r\n        const contact = {\r\n            id: uuidv4(),\r\n            name,\r\n            number,\r\n      };\r\n      \r\n      this.state.contacts.find(e => e.name === contact.name) ?\r\n        alert (`${name} is already in contacts`):\r\n        this.setState(({ contacts }) => ({\r\n            contacts: [contact, ...contacts],\r\n        }));\r\n    };\r\n\r\n    changeFilter = (e) => {\r\n    this.setState({ filter: e.currentTarget.value });\r\n  };\r\n\r\n  filterContacts = () => {\r\n    const { filter, contacts } = this.state;\r\n    const normalizedFilter = filter.toLowerCase();\r\n\r\n    return contacts.filter((contact) =>\r\n      contact.name.toLowerCase().includes(normalizedFilter),\r\n    );\r\n  };\r\n\r\n  deleteContact = contactId => {\r\n    this.setState(prevState => ({\r\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\r\n    }));\r\n  };\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>Phonebook</h1>\r\n                <ContactForm onSubmit={this.addContact} />\r\n                <h2>Contacts</h2>\r\n                <Filter value={this.state.filter} onChange={this.changeFilter} />\r\n                <ContactList contactList={this.filterContacts()}\r\n                  onClick={this.deleteContact}\r\n                />\r\n            </div>\r\n        )\r\n  }\r\n};\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__3chDA\",\"label\":\"ContactForm_label__2yAn9\",\"input\":\"ContactForm_input__2KGsB\",\"button\":\"ContactForm_button__24uSr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__2VCYg\",\"input\":\"Filter_input__tcFW8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactItem_item__E4Hnp\",\"btn\":\"ContactItem_btn__cOTKD\"};"],"sourceRoot":""}